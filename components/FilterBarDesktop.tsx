// components/FilterBarDesktop.tsx
'use client';

import { ChevronDown } from 'lucide-react';

export default function FilterBarDesktop({
  seasonFilter,
  styleFilter,
  peytonOnly,
  setSeasonFilter,
  setStyleFilter,
  setPeytonOnly,
  resetFilters,
  seasons,
  styles,
}: {
  seasonFilter: string;
  styleFilter: string;
  peytonOnly: boolean;
  setSeasonFilter: (val: string) => void;
  setStyleFilter: (val: string) => void;
  setPeytonOnly: (val: boolean) => void;
  resetFilters: () => void;
  seasons: string[];
  styles: string[];
}) {
  return (
    <div className="sticky top-2 z-40 flex justify-center">
      <div className="flex items-center gap-3 bg-white/80 backdrop-blur-md rounded-full shadow p-3 border border-gray-200">
        <div className="relative">
          <select
            value={seasonFilter}
            onChange={(e) => setSeasonFilter(e.target.value)}
            className="appearance-none bg-white border border-gray-300 text-gray-700 text-sm rounded-full pl-4 pr-8 py-2 focus:outline-none focus:ring-2 focus:ring-gray-300"
          >
            {seasons.map((s) => (
              <option key={s}>{s}</option>
            ))}
          </select>
          <ChevronDown className="pointer-events-none absolute right-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-500" />
        </div>
        <div className="relative">
          <select
            value={styleFilter}
            onChange={(e) => setStyleFilter(e.target.value)}
            className="appearance-none bg-white border border-gray-300 text-gray-700 text-sm rounded-full pl-4 pr-8 py-2 focus:outline-none focus:ring-2 focus:ring-gray-300"
          >
            {styles.map((s) => (
              <option key={s}>{s}</option>
            ))}
          </select>
          <ChevronDown className="pointer-events-none absolute right-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-500" />
        </div>
        <label className="flex items-center gap-2 text-sm bg-white border border-gray-300 rounded-full pl-4 pr-4 py-2 cursor-pointer select-none">
          <input
            type="checkbox"
            checked={peytonOnly}
            onChange={() => setPeytonOnly(!peytonOnly)}
            className="form-checkbox h-4 w-4 text-black rounded"
          />
          Generated by Peyton
        </label>
        <button
          onClick={resetFilters}
          className="text-sm text-gray-600 border border-gray-300 rounded-full px-4 py-2 hover:bg-gray-100"
        >
          Reset
        </button>
      </div>
    </div>
  );
}