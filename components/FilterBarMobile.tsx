'use client';

import { ChevronDown, ChevronUp } from 'lucide-react';

export default function FilterBarMobile({
  showMobileFilters,
  setShowMobileFilters,
  seasonFilter,
  styleFilter,
  peytonOnly,
  setSeasonFilter,
  setStyleFilter,
  setPeytonOnly,
  resetFilters,
  seasons,
  styles,
  toggleRef,
  filterRef,
}: {
  showMobileFilters: boolean;
  setShowMobileFilters: (val: boolean) => void;
  seasonFilter: string;
  styleFilter: string;
  peytonOnly: boolean;
  setSeasonFilter: (val: string) => void;
  setStyleFilter: (val: string) => void;
  setPeytonOnly: (val: boolean) => void;
  resetFilters: () => void;
  seasons: string[];
  styles: string[];
  toggleRef: any;
  filterRef: any;
}) {
  return (
    <div className="fixed bottom-4 right-4 z-50">
      <button
        ref={toggleRef}
        onClick={() => setShowMobileFilters(!showMobileFilters)}
        className="inline-flex items-center gap-1 px-4 py-2 text-sm border border-gray-300 rounded-full bg-white shadow hover:bg-gray-100 transition"
      >
        Filters
        {showMobileFilters ? (
          <ChevronUp className="w-4 h-4" />
        ) : (
          <ChevronDown className="w-4 h-4" />
        )}
      </button>

      {showMobileFilters && (
        <div
          ref={filterRef}
          className="absolute bottom-14 right-0 z-50 bg-white rounded-2xl shadow-xl p-4 w-[90vw] max-w-xs transition-all duration-200 border border-gray-200"
        >
          <div className="mb-3 relative">
            <select
              value={seasonFilter}
              onChange={(e) => setSeasonFilter(e.target.value)}
              className="appearance-none w-full bg-white border border-gray-300 text-gray-700 text-sm rounded-full pl-4 pr-8 py-2 focus:outline-none focus:ring-2 focus:ring-gray-300"
            >
              {seasons.map((s) => (
                <option key={s}>{s}</option>
              ))}
            </select>
            <ChevronDown className="pointer-events-none absolute right-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-500" />
          </div>

          <div className="mb-3 relative">
            <select
              value={styleFilter}
              onChange={(e) => setStyleFilter(e.target.value)}
              className="appearance-none w-full bg-white border border-gray-300 text-gray-700 text-sm rounded-full pl-4 pr-8 py-2 focus:outline-none focus:ring-2 focus:ring-gray-300"
            >
              {styles.map((s) => (
                <option key={s}>{s}</option>
              ))}
            </select>
            <ChevronDown className="pointer-events-none absolute right-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-500" />
          </div>

          <label className="flex items-center gap-2 mb-3 text-sm">
            <input
              type="checkbox"
              checked={peytonOnly}
              onChange={() => setPeytonOnly(!peytonOnly)}
              className="form-checkbox h-4 w-4 text-black rounded"
            />
            Generated by Peyton
          </label>

          <button
            onClick={resetFilters}
            className="text-sm text-gray-600 border border-gray-300 rounded-full px-4 py-2 w-full hover:bg-gray-100"
          >
            Reset
          </button>
        </div>
      )}
    </div>
  );
}